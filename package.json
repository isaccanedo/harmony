{
  "name": "harmony",
  "version": "0.0.0",
  "description": "Data services frontend",
  "main": "index.js",
  "scripts": {
    "test": "better-npm-audit audit && lerna run test --load-env-files=false",
    "test-fast": "lerna run test-fast --load-env-files=false",
    "test-bail": "lerna run test-bail --load-env-files=false",
    "coverage": "lerna run coverage --load-env-files=false",
    "lint": "lerna run lint",
    "start": "cd services/harmony && NODE_OPTIONS=--max-old-space-size=3096 ts-node -r tsconfig-paths/register app/server.ts",
    "start-dev": "cd services/harmony && strict-npm-engines && ts-node-dev --no-notify -r tsconfig-paths/register --watch app/views,public/js --respawn app/server",
    "start-dev-fast": "cd services/harmony && TS_NODE_TRANSPILE_ONLY=true ts-node-dev --no-notify -r tsconfig-paths/register --respawn --inspect=127.0.0.1:${DEBUG_PORT:-9200} app/server",
    "update-dev": "npm install && lerna run build && bin/restart-services",
    "watch-debug": "cd services/harmony && TS_NODE_TRANSPILE_ONLY=true nodemon --inspect=5858 -e ts,tsx,html --exec node -r tsconfig-paths/register -r ts-node/register app/server.ts",
    "postinstall": "if test \"$NODE_ENV\" != \"production\" && test \"$LERNA\" != \"false\" ; then lerna exec --concurrency 1 -- npm install; fi",
    "build": "lerna exec --scope=harmony -- VERSION=${VERSION:-latest} npm run build",
    "build-sequential": "lerna exec --ignore harmony --concurrency 1 -- VERSION=${VERSION:-latest} npm run build",
    "build-all": "lerna exec --ignore harmony -- VERSION=${VERSION:-latest} npm run build",
    "build-all-m1": "lerna exec --ignore harmony --concurrency 1 -- VERSION=${VERSION:-latest} npm run build-m1",
    "push-image-all": "lerna exec --ignore harmony --ignore @harmony/util --concurrency 1 -- ./bin/push-image ${VERSION:-latest}",
    "build-notebooks-image": "docker build --platform linux/amd64 -t harmonyservices/notebooks:${VERSION:-latest} -f Dockerfile-notebooks .",
    "run-notebooks-image": "source .env && docker run -i -t --platform linux/amd64 --init -p 8888:8888 --env NB_EDL_USERNAME=\"${NB_EDL_USERNAME}\" --env NB_EDL_PASSWORD=\"${NB_EDL_PASSWORD}\" harmonyservices/notebooks:${VERSION:-latest}",
    "publish": "lerna exec --scope=harmony -- VERSION=${VERSION:-latest} npm run publish ",
    "compare-services": "SKIP_ENV_VALIDATION=true ts-node scripts/service-comparison.ts",
    "better-audit": "better-npm-audit audit && lerna run better-audit"
  },
  "keywords": [
    "NASA",
    "EOSDIS",
    "Harmony",
    "Services",
    "Cumulus"
  ],
  "engines": {
    "node": "^18.18.2",
    "npm": ">=8"
  },
  "nyc": {
    "all": true,
    "check-coverage": true,
    "extension": [
      ".ts",
      ".tsx"
    ],
    "exclude": [
      "**/*.d.ts"
    ],
    "lines": 70,
    "reporter": [
      "lcov",
      "text"
    ],
    "include": [
      "app/**/*.ts",
      "example/**/*.ts"
    ]
  },
  "author": "NASA EOSDIS Harmony team",
  "license": "Apache-2.0",
  "dependencies": {
    "@aws-sdk/client-ecr": "^3.437.0",
    "@aws-sdk/client-s3": "^3.437.0",
    "@aws-sdk/client-sqs": "^3.437.0",
    "@aws-sdk/client-sts": "^3.437.0",
    "@aws-sdk/credential-provider-imds": "^3.374.0",
    "@aws-sdk/hash-node": "^3.374.0",
    "@aws-sdk/protocol-http": "^3.374.0",
    "@aws-sdk/s3-request-presigner": "^3.437.0",
    "@aws-sdk/url-parser": "^3.374.0",
    "@aws-sdk/util-format-url": "^3.433.0",
    "@harmony/util": "file:packages/util",
    "@kubernetes/client-node": "^0.18.1",
    "@mapbox/geojson-rewind": "^0.5.0",
    "@tmcw/togeojson": "^4.2.0",
    "@types/cookie": "^0.4.1",
    "@types/cookie-signature": "^1.0.3",
    "@types/express": "^4.17.13",
    "@types/js-yaml": "^4.0.4",
    "@types/multer": "^1.4.7",
    "@types/multer-s3": "^3.0.0",
    "@types/mustache": "^4.1.2",
    "@types/node-fetch": "^2.5.12",
    "@types/serve-favicon": "^2.5.3",
    "@types/shpjs": "^3.4.1",
    "@types/simple-oauth2": "^2.5.5",
    "@types/tmp": "^0.2.3",
    "@types/uuid": "^8.3.1",
    "@types/ws": "^6.0.1",
    "@xmldom/xmldom": "^0.8.10",
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1",
    "ajv-formats-draft2019": "^1.6.1",
    "axios": "^1.6.8",
    "body-parser": "^1.19.0",
    "class-validator": "^0.14.0",
    "cookie-parser": "^1.4.5",
    "date-fns": "^2.21.3",
    "dotenv": "^10.0.0",
    "express": "^4.17.3",
    "express-async-handler": "^1.2.0",
    "express-openapi": "^4.6.5",
    "express-validator": "^6.13.0",
    "express-winston": "^4.1.0",
    "fastq": "^1.11.0",
    "form-data": "^4.0.0",
    "gdal-async": "~3.7.2-1",
    "highlight.js": "^11.7.0",
    "js-yaml": "^4.1.0",
    "json2csv": "^5.0.7",
    "knex": "^2.4.0",
    "knex-paginate": "^2.3.0",
    "lodash": "^4.17.21",
    "logform": "^2.4.0",
    "markdown-it": "^13.0.1",
    "markdown-it-anchor": "^8.6.7",
    "markdown-it-copy": "^1.2.0",
    "markdown-it-for-inline": "^0.1.1",
    "markdown-it-github-toc": "^3.2.4",
    "markdown-it-include": "^2.0.0",
    "markdown-it-mark": "^3.0.1",
    "markdown-it-replace-link": "^1.2.0",
    "markdown-it-toc-done-right": "^4.2.0",
    "minipass": "^3.2.1",
    "multer": "^1.4.5-lts.1",
    "multer-s3": "^3.0.1",
    "mustache": "^4.2.0",
    "mustache-express": "^1.3.2",
    "node-fetch": "^2.6.6",
    "p-queue": "^7.1.0",
    "pg": "^8.7.3",
    "pg-native": "^3.0.1",
    "serve-favicon": "^2.5.0",
    "shpjs": "^4.0.2",
    "simple-oauth2": "git+https://github.com/bilts/simple-oauth2.git#fix-encoding",
    "source-map-support": "^0.5.19",
    "sqlite3": "^5.1.6",
    "swagger-ui-express": "^4.1.4",
    "tmp": "^0.2.1",
    "tmp-promise": "^3.0.3",
    "ts-node": "^10.7.0",
    "tsconfig-paths": "^4.0.0",
    "tweetnacl": "^1.0.3",
    "tweetnacl-util": "^0.15.1",
    "typescript": "^5.1.6",
    "unzipper": "^0.10.11",
    "uuid": "^8.3.2",
    "winston": "^3.10.0",
    "xregexp": "^5.0.2",
    "xstate": "^4.31.0"
  },
  "devDependencies": {
    "@mapbox/node-pre-gyp": "^1.0.9",
    "@pollyjs/adapter-node-http": "^5.1.1",
    "@pollyjs/core": "^5.1.1",
    "@pollyjs/persister-fs": "5.1.1",
    "@types/chai": "^4.2.18",
    "@types/chai-as-promised": "^7.1.4",
    "@types/geojson": "^7946.0.10",
    "@types/json2csv": "^5.0.3",
    "@types/leaflet": "^1.5.15",
    "@types/lodash": "^4.14.176",
    "@types/mocha": "^9.0.0",
    "@types/mock-aws-s3": "^2.6.1",
    "@types/node": "^16.18.41",
    "@types/sinon": "^10.0.6",
    "@types/superagent": "^4.1.11",
    "@types/supertest": "^2.0.10",
    "@typescript-eslint/eslint-plugin": "^5.60.0",
    "@typescript-eslint/parser": "^5.60.0",
    "aws-sdk-mock": "^5.1.0",
    "axios-mock-adapter": "^1.18.2",
    "better-npm-audit": "^3.7.3",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "cookie": "^0.4.1",
    "cookie-signature": "^1.1.0",
    "copyfiles": "^2.3.0",
    "csv-parse": "^5.0.4",
    "eslint": "^8.48.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsdoc": "^46.2.6",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-tsdoc": "^0.2.17",
    "fast-check": "^2.19.0",
    "get-pkg-repo": "^5.0.0",
    "javascript-typescript-langserver": "^2.11.3",
    "jsonschema": "^1.4.1",
    "just-permutations": "2.1.1",
    "lerna": "^7.1.4",
    "mocha": "^9.1.3",
    "mocha-junit-reporter": "^2.0.0",
    "mocha-multi": "^1.1.3",
    "mock-aws-s3": "^4.0.1",
    "mockdate": "^3.0.2",
    "nodemon": "^2.0.15",
    "nyc": "^15.1.0",
    "replay": "^2.4.0",
    "sinon": "^12.0.1",
    "strict-npm-engines": "^0.0.1",
    "superagent": "^8.0.6",
    "supertest": "^6.1.3",
    "ts-node-dev": "^2.0.0"
  },
  "overrides": {
    "trim-newlines": "4.0.1",
    "fast-json-patch": "3.1.1"
  }
}