apiVersion: apps/v1
kind: Deployment
metadata:
  name: query-cmr
  labels:
    name: query-cmr
spec:
  replicas: 1
  selector:
    matchLabels:
      name: query-cmr
  template:
    metadata:
      labels:
        name: query-cmr
    spec:
      terminationGracePeriodSeconds: $DEFAULT_POD_GRACE_PERIOD_SECS
      containers:
        - name: worker
          imagePullPolicy: IfNotPresent
          image: $QUERY_CMR_IMAGE
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","touch /tmp/TERMINATING; while [ -f /tmp/WORKING ]; do sleep 1; done; kill -TERM 1"]
          resources:
            limits:
              memory: $QUERY_CMR_LIMITS_MEMORY
            requests:
              memory: $QUERY_CMR_REQUESTS_MEMORY
          envFrom:
          - configMapRef:
              name: harmony-env
          - secretRef:
              name: harmony-secrets
          env:
            - name: "PORT"
              value: "$WORKER_PORT"
          volumeMounts:
            - mountPath: /tmp
              name: ephemeral-volume
        - name: manager
          imagePullPolicy: IfNotPresent
          image: $SERVICE_RUNNER_IMAGE
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","touch /tmp/TERMINATING; while [ -f /tmp/WORKING ]; do sleep 1; done; kill -TERM 1"]
          livenessProbe:
            httpGet:
              path: /liveness
              port: $PORT
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            limits:
              memory: $SERVICE_RUNNER_LIMITS_MEMORY
            requests:
              memory: $SERVICE_RUNNER_REQUESTS_MEMORY
          envFrom:
          - configMapRef:
              name: harmony-env
          - secretRef:
              name: harmony-secrets
          env:
          - name: BACKEND_HOST
            value: $BACKEND_HOST
          - name: BACKEND_PORT
            value: "$BACKEND_PORT"
          - name: WORKER_PORT
            value: "$WORKER_PORT"
          - name: HARMONY_SERVICE
            value: "$QUERY_CMR_IMAGE"
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
            - containerPort: $PORT
          volumeMounts:
            - mountPath: /tmp
              name: ephemeral-volume
      volumes:
      - name: ephemeral-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: query-cmr
  labels:
    should_scrape: "true"
    name: query-cmr
  annotations:
    prometheus.io/port: "$PORT"
    prometheus.io/scrape: "true"
spec:
  ports:
    - name: frontend
      port: $PORT
      targetPort: $PORT
      protocol: TCP
  selector:
    name: query-cmr
  type: ClusterIP
